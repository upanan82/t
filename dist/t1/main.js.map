{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/test.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<input type=\\\"text\\\" #input id=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" />\\n<ul *ngIf=\\\"!!result.length\\\">\\n  <li *ngFor=\\\"let item of result\\\" [ngClass]=\\\"!!score ? 'err' : 'exec'\\\">{{item}}</li>\\n</ul>\\n<span *ngIf=\\\"!result.length && !!searchText\\\">&#9760;</span>\\n<div *ngIf=\\\"dblShow\\\">\\n  <img *ngFor=\\\"let img of images\\\" src=\\\"{{img}}\\\" />\\n</div>\\n\"","module.exports = \"input {\\n  width: 100%;\\n  font-size: .7rem;\\n  border: none;\\n  outline: none; }\\n\\nul {\\n  margin: .5rem 0 0; }\\n\\nul li {\\n    font-size: .7rem; }\\n\\nul li.exec {\\n      color: green; }\\n\\nul li.err {\\n      color: darkorange; }\\n\\nspan {\\n  font-size: 3rem;\\n  color: darkred; }\\n\\nimg {\\n  width: 8rem;\\n  border: 1px solid black;\\n  margin: 2px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxkbXl0cm8ub255c2hjaGVua29cXERlc2t0b3BcXHQxL3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixhQUFhLEVBQUE7O0FBR2Y7RUFDRSxpQkFBaUIsRUFBQTs7QUFEbkI7SUFJSSxnQkFBZ0IsRUFBQTs7QUFKcEI7TUFPTSxZQUFZLEVBQUE7O0FBUGxCO01BV00saUJBQWlCLEVBQUE7O0FBS3ZCO0VBQ0UsZUFBZTtFQUNmLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSxXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBmb250LXNpemU6IC43cmVtO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG51bCB7XHJcbiAgbWFyZ2luOiAuNXJlbSAwIDA7XHJcblxyXG4gIGxpIHtcclxuICAgIGZvbnQtc2l6ZTogLjdyZW07XHJcblxyXG4gICAgJi5leGVjIHtcclxuICAgICAgY29sb3I6IGdyZWVuO1xyXG4gICAgfVxyXG5cclxuICAgICYuZXJyIHtcclxuICAgICAgY29sb3I6IGRhcmtvcmFuZ2U7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5zcGFuIHtcclxuICBmb250LXNpemU6IDNyZW07XHJcbiAgY29sb3I6IGRhcmtyZWQ7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgd2lkdGg6IDhyZW07XHJcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgbWFyZ2luOiAycHg7XHJcbn1cclxuIl19 */\"","import { Component, HostListener, ViewChild, ElementRef } from '@angular/core';\nimport * as Fuse from 'fuse.js';\nimport { ITest, test, images } from './test';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  @ViewChild('input')\n  public input: ElementRef;\n\n  public result: string[] = [];\n\n  public score: number = null;\n\n  public images = images;\n\n  public dblShow = false;\n\n  private fuse: Fuse<ITest, Fuse.FuseOptions<ITest>> = null;\n\n  private _searchText = '';\n\n  constructor() {\n    const options: Fuse.FuseOptions<ITest> = {\n      shouldSort: true,\n      includeScore: true,\n      threshold: 0.2,\n      location: 0,\n      distance: 9,\n      maxPatternLength: 32,\n      minMatchCharLength: 32,\n      keys: [\n        'question'\n      ]\n    };\n\n    for (;;) {\n      const secure = prompt();\n\n      if (secure === '12') {\n        break;\n      }\n    }\n\n    this.fuse = new Fuse(test, options);\n  }\n\n  public get searchText(): string {\n    return this._searchText;\n  }\n\n  public set searchText(val: string) {\n    this._searchText = val.trim();\n\n    if (!!val) {\n      this.search();\n    }\n  }\n\n  @HostListener('window:dblclick')\n  public dblclick(): void {\n    this.dblShow = true;\n  }\n\n  @HostListener('window:blur')\n  public blur(): void {\n    this.clear();\n  }\n\n  @HostListener('window:click')\n  public async click(): Promise<void> {\n    this.clear();\n    await this.focus();\n  }\n\n  @HostListener('window:focus')\n  public async windowFocus(): Promise<void> {\n    this.clear();\n    await this.focus();\n  }\n\n  private search(): void {\n    const result: any = this.fuse.search(this._searchText);\n\n    if (!result.length) {\n      this.result = [];\n      this.score = null;\n    } else {\n      this.result = result[0].item.answer;\n      this.score = result[0].score;\n    }\n  }\n\n  private clear(): void {\n    this.searchText = '';\n    this.result = [];\n    this.score = null;\n    this.dblShow = false;\n  }\n\n  private async focus(): Promise<void> {\n    await setTimeout(() => {\n      this.input.nativeElement.focus();\n    }, 0);\n  }\n}\n","import { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export interface ITest {\r\n  question: string;\r\n  answer: string[];\r\n}\r\n\r\nexport const images = [\r\n  '../assets/01.jpg',\r\n  '../assets/02.jpg',\r\n  '../assets/03.jpg',\r\n  '../assets/04.jpg',\r\n  '../assets/05.jpg',\r\n  '../assets/06.jpg',\r\n  '../assets/07.jpg',\r\n  '../assets/08.jpg',\r\n  '../assets/09.jpg',\r\n  '../assets/10.jpg',\r\n  '../assets/11.jpg',\r\n  '../assets/12.jpg',\r\n  '../assets/13.jpg',\r\n  '../assets/14.jpg',\r\n  '../assets/15.jpg',\r\n  '../assets/16.jpg',\r\n  '../assets/17.jpg',\r\n  '../assets/18.jpg',\r\n  '../assets/19.jpg',\r\n  '../assets/20.jpg',\r\n  '../assets/21.jpg',\r\n  '../assets/22.jpg',\r\n  '../assets/23.jpg',\r\n];\r\n\r\nexport const test: ITest[] = [\r\n    {\r\n        question: 'Головними областями програмної інженерії згідно SWEBOK є',\r\n        answer: [\r\n            'конструювання програмного забезпечення',\r\n            'інженерія вимог'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Організаційними областями програмної інженерії згідно SWEBOK є',\r\n        answer: [\r\n            'керування конфігурацією',\r\n            'процес інженерії програмних систем'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Головними областями програмної інженерії згідно SWEBOK не є',\r\n        answer: [\r\n            'керування конфігурацією',\r\n            'процес інженерії програмних систем'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Валідація вимог - це',\r\n        answer: [\r\n            'перевірка повноти, несуперечності і однозначності специфікації і правильності виконання функцій системи відповідно до вимог'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Основні систематичні методи забезпечення якості програм включають в себе',\r\n        answer: [\r\n            'верифікація компонентів',\r\n            'верифікація вимог',\r\n            'валідація вимог'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Структурна декомпозиції продукту', // error\r\n        answer: [\r\n            'дерево, що показує ієрархічність результатів проекту'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Структурна декомпозиції робіт', // error\r\n        answer: [\r\n            'дерево, що показує розподіл завдань необхідних для досягнення цілі'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Мережевий графік',\r\n        answer: [\r\n            'граф взаємозвязків між роботами проекту плану з вказанням тривалості окремих робіт'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Діаграма Ганта',\r\n        answer: [\r\n            'графік робіт за проектом з вказаними календарними датами'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Керування проектом - це',\r\n        answer: [\r\n            'керівництво роботами команди виконавців проекту для реалізації проекту з використанням методів керування, планування і контролю робіт, керування ризиками, ефективною організацією роботи і комунікаційними потоками в команді виконавців'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Планування - це',\r\n        answer: [\r\n            'процес розподілу і призначення ресурсів (матеріальних і людських) з урахуванням вартості і часу виконання проекту'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Основними складовими будь-якого проекту є',\r\n        answer: [\r\n            'ресурси (людські, фінансові, технічні)',\r\n            'час виконання проекту',\r\n            'вартість виконання проекту'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Відповідальність за координацію і реалізацію основних складових проекту несе',\r\n        answer: [\r\n            'менеджер проекту'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Відповідальність за ідейну, функціональну сторону проекту несе',\r\n        answer: [\r\n            'головний програміст'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Склад і кількість співробітників, що входять в команду проекту, залежить від',\r\n        answer: [\r\n            'масштабу робіт',\r\n            'досвіду співробітників'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Ризики можуть бути',\r\n        answer: [\r\n            '\"Відомі\", які можна планувати',\r\n            '\"Невідомі\", які не ідентифіковано і не можуть бути спрогнозовані'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Планування керування ризиками - це',\r\n        answer: [\r\n            'процес прийняття рішень щодо попередження ризиків, або зменшення їх наслідків'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Кількісна оцінка ризиків - це',\r\n        answer: [\r\n            'процес визначення ймовірності виникнення ризиків, впливу наслідків ризиків на проект і прийняття рішень з оцінки ризику'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Визначення вимог, як правило, проводиться',\r\n        answer: [\r\n            'шляхом обговорення поглядів замовника на систему з майбутніми її розробниками'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Вимоги до програмного забезпечення складаються з',\r\n        answer: [\r\n            'системних вимог',\r\n            'функціональних вимог',\r\n            'нефункціональних вимог'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Нефункціональні вимоги для більшості сучасних багатокористувацьких програмних систем включають такі умови і обмеження', // error\r\n        answer: [\r\n            'конфіденційність, безпеку і захист даних',\r\n            'одночасність доступу до системи користувачів',\r\n            'відмовостійкість',\r\n            'продуктивність'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Нефункціональні вимоги визначають',\r\n        answer: [\r\n            'деякі обмеження до властивостей функцій або до системи, важливих для користувачів або розробників'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Вимоги користувачів визначають',\r\n        answer: [\r\n            'мети і завдання, які користувачам дозволить вирішувати майбутня система'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Функціональні вимоги визначають',\r\n        answer: [\r\n            'перелік функцій або сервісів, які повинна виконувати система, а також обмежень на дані і поведінку системи'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Системні вимоги визначають',\r\n        answer: [\r\n            'зовнішні умови для виконання системних функцій і обмежень на створюваний продукт, а також вимоги до опису підсистем'\r\n        ]\r\n    },\r\n    {\r\n        question: 'В обговоренні вимог на систему беруть участь', // error\r\n        answer: [\r\n            'представники замовника з декількох професійних груп',\r\n            'аналітики і розробники майбутньої системи'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Що дає узгоджена область дій по проекту',\r\n        answer: [\r\n            'можливість оцінити необхідні інвестиції в проект'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Специфікація вимог до програмного забезпечення - це',\r\n        answer: [\r\n            'формалізоване опис функціональних, нефункціональних і системних вимог, вимог до характеристик якості, а також до структури програмного забезпечення, принципам взаємодії з іншими компонентами, алгоритмам і структурі даних системи',\r\n        ]\r\n    },\r\n    {\r\n        question: 'Інструментальні засоби розробки програмного забезпечення  це', // error\r\n        answer: [\r\n            'засоби підтримки кодування і тестування (компілятори, генератори програм, отладчики і ін)'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Теоретичні засоби розробки програмного забезпечення  це', // error\r\n        answer: [\r\n            'методи верифікації та докази правильності специфікації програм'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Мета процесу валідації',\r\n        answer: [\r\n            'переконатися, що готова продукція дійсно задовольняє свого вихідного призначенню'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Налагодження - це',\r\n        answer: [\r\n            'перевірка опису програмного обєкта на мові програмування з метою виявлення в ньому помилок і подальше їх усунення'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Інспекція програмного забезпечення - це',\r\n        answer: [\r\n            'статична перевірка відповідності програми заданим специфікаціями'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Статичний аналіз програмного забезпечення полягає в',\r\n        answer: [\r\n            'інспекції вихідного коду і наскрізному контролю програми'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Динамічні методи тестування використовуються',\r\n        answer: [\r\n            'в процесі виконання програм'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Основні методи тестування включають',\r\n        answer: [\r\n            'метод \"чорної скрині\"',\r\n            'метод \"скляної скрині\"',\r\n            'метод \"білої скрині\"'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Функціональні тести створюються по',\r\n        answer: [\r\n            'зовнішнім специфікаціям функцій',\r\n            'проектній інформації',\r\n            'тексту на мові програмування'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Всі помилки, які виникають в програмах, прийнято поділяти на такі класи',\r\n        answer: [\r\n            'помилки інтерфейсів',\r\n            'помилки обсягу даних',\r\n            'логічні і функціональні помилки'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Відповідно до міжнародного стандарту ANSI / IEEE-729-83 Помилка (error) - це',\r\n        answer: [\r\n            'стан програми, при якому видаються неправильні результати, причиною яких є вади в операторах програми або в технологічному процесі її розробки'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Відповідно до міжнародного стандарту ANSI / IEEE-729-83 дефект (fault) - це',\r\n        answer: [\r\n            'наслідок помилок розробника на будь-якому з етапів розробки, яка може міститися в початкових або проектних специфікаціях, текстах кодів програм, експлуатаційної документації та тп'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Відповідно до міжнародного стандарту ANSI / IEEE-729-83 Відмова (failure) - це',\r\n        answer: [\r\n            'відхилення програми від функціонування або неможливість програми виконувати функції, визначені вимогами і обмеженнями'\r\n        ]\r\n    },\r\n    {\r\n        question: `В обов'язки інженера-тестувальника входять`,\r\n        answer: [\r\n            'оцінка тестів',\r\n            'створення тестових сценаріїв',\r\n            'складання плану тесту'\r\n        ]\r\n    },\r\n    {\r\n        question: `В обов'язки інженера-тестувальника не включаються`,\r\n        answer: [\r\n            'виправлення помилок, виявлених на етапі тестування'\r\n        ]\r\n    },\r\n    {\r\n        question: 'RUP (Rational Unified Process) - це',\r\n        answer: [\r\n            'керівництво роботами команди виконавців проекту для реалізації проекту з використанням методів керування, планування і контролю робіт'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Модель процесу розробки програмного забезпечення - це',\r\n        answer: [\r\n            'модель, яка визначає структуру процесів і керівництво ними протягом усього часу життя проекту'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Модель керування ризиками - це',\r\n        answer: [\r\n            'модель, за допомогою якої визначається порядок і умови реалізації превентивних рішень і заходів щодо виявлення найбільш істотних моментів ризику'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Модель процесу проектування - це',\r\n        answer: [\r\n            'модель, яка визначає цілі та завдання процесу розробки виробничої архітектури з паралельним і ітераційним виконанням окремих робіт'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Модель проектної групи - це',\r\n        answer: [\r\n            `модель, яка визначає ролі, обов'язки кожного учасника проекту і розподіл між ними відповідальності`\r\n        ]\r\n    },\r\n    {\r\n        question: 'Реінженерія  - це',\r\n        answer: [\r\n            'удосконалення застарілого ПЗ шляхом його реорганізації або реструктуризації, а також перепрограмування окремих елементів або настроювання параметрів на іншу платформу, середовище виконання зі збереженням зручності його супроводу'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Рефакторинг - це',\r\n        answer: [\r\n            'перетворення програмного коду, зміна внутрішньої структури програмного забезпечення для полегшення розуміння коду і легшого внесення подальших змін без зміни зовнішньої поведінки самої системи'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Причини, що вимагають перетворення вихідного коду програм в іншу мову, можуть бути',\r\n        answer: [\r\n            'оновлення платформи апаратних засобів, на якій може не виконуватися компілятор мови програмування',\r\n            'недолік кваліфікованого персоналу для програм, написаних в мові програмування, що вийшли з ужитку'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Операції рефакторінгу над компонентами задовольняють умовам',\r\n        answer: [\r\n            'написання системної специфікації починається не з \"нуля\", а з розгляду можливостей старої успадковане системи',\r\n            'операція не змінює функціональність компонента і новий компонент може застосовуватися в раніше побудованих компонентних системах'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Вимоги - це',\r\n        answer: [\r\n            'властивості, якими має володіти ПО для адекватного визначення функцій, умов і обмежень виконання програмного забезпечення, а також обсягів даних, технічного забезпечення та середовища функціонування'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Процес перевірки правильності специфікацій вимог на їх відповідність, несуперечність, повноту і здійсненність, а також на відповідність стандартам - це',\r\n        answer: [\r\n            'верифікація вимог'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Інженерія вимог',\r\n        answer: [\r\n            'Виявлення, аналіз, специфікація, перевірка потреб користувача, або властивостей розроблюваного ПЗ'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Проектування',\r\n        answer: [\r\n            'Процес визначення архітектури, складу компонентів, інтерфейсів та інших характеристик до системи.'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Конструювання',\r\n        answer: [\r\n            'Кодування, модульне та інтеграційне тестування, відлагодження.'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Тестування',\r\n        answer: [\r\n            'Перевірка поведінки системи на відповідність до специфікації, пошук дефектів.'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Супровід програмного забезпечення',\r\n        answer: [\r\n            'Поліпшення, оптимізація системи та процесів роботи з нею після вводу до експлуатації.'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Тестування ефективності програмного забезпечення дозволяє перевірити',\r\n        answer: [\r\n            'продуктивність',\r\n            'максимально допустиме навантаження',\r\n            'максимальний обсяг даних'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Тестування ефективності програмного забезпечення не дозволяє перевірити',\r\n        answer: [\r\n            'роботу системи на різних конфігураціях апаратури'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Чим вважається супровід відповідно до стандартів ISO / IEC 12207 та ISO / IEC 14764',\r\n        answer: [\r\n            'модифікацією програмного продукту в процесі експлуатації за умови збереження цілісності продукту'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Реорганізація коду для поліпшення характеристик і показників якості програм без зміни їх поведінки - це',\r\n        answer: [\r\n            'рефакторинг'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Збірка програмного забезпечення - це',\r\n        answer: [\r\n            `об'єднання коректних елементів програмного забезпечення і конфігураційних даних в єдину виконувану програму`\r\n        ]\r\n    },\r\n    {\r\n        question: 'Якість програмного забезпечення - це',\r\n        answer: [\r\n            'набір властивостей продукту, які характеризують його здатність задовольнити встановлені або передбачувані потреби замовника'\r\n        ]\r\n    },\r\n    {\r\n        question: '',\r\n        answer: [\r\n            '',\r\n            ''\r\n        ]\r\n    },\r\n    {\r\n        question: 'До характеристик якості програмного забезпечення відносять',\r\n        answer: [\r\n            'ефективність',\r\n            'надійність',\r\n            'переносимість'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Діяльності і техніки гарантії якості програмного забезпечення включають',\r\n        answer: [\r\n            'інспекцію програмного забезпечення',\r\n            'валідацію програмного забезпечення'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Життєвий цикл програмної системи - це',\r\n        answer: [\r\n            'певна послідовність процесів (етапів), починаючи від постановки задачі до її втілення в готову програму, експлуатації та вилучення з експлуатації'\r\n        ]\r\n    }, {\r\n        question: `Головна мета об'єктного аналізу - це`,\r\n        answer: [\r\n            `представити предметну область як множину об'єктів з властивостями і характеристиками, які є достатніми для їх визначення і ідентифікації, а також для завдання поведінки об'єктів в рамках обраної системи понять і абстракцій`\r\n        ]\r\n    }, {\r\n        question: 'Завдання проектування - це',\r\n        answer: [\r\n            'побудова архітектури системи'\r\n        ]\r\n    }, {\r\n        question: 'Архітектура системи - це',\r\n        answer: [\r\n            'структурна схема компонентів системи, що взаємодіють між собою через інтерфейси'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Умови побудови архітектури системи включають в себе',\r\n        answer: [\r\n            'декомпозиція системи на компоненти або модулі',\r\n            'ієрархічне уявлення абстракції системи і приховування тих деталей, які будуть відпрацьовані на наступних рівнях'\r\n        ]\r\n    },\r\n    {\r\n        question: `Вимоги, що пред'являються до якості програмного забезпечення, ставляться відповідно до`,\r\n        answer: [\r\n            'умов застосування',\r\n            'складності вирішуваних завдань'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Функціональність - це',\r\n        answer: [\r\n            'сукупність властивостей, що визначають здатність програмного забезпечення виконувати певний перелік функцій, які задовольняють потребам відповідно до призначення'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Надійність - це',\r\n        answer: [\r\n            'група властивостей, що обумовлює здатність програмного забезпечення зберігати працездатність і перетворювати вихідні дані в результат за встановлений період часу, характер відмов якого є наслідком внутрішніх дефектів і умов його застосування'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Зручність застосування - це',\r\n        answer: [\r\n            'сукупність властивостей програмного забезпечення для передбачуваного кола користувачів і відображають легкість його освоєння і адаптації до постійно змінюваних умов експлуатації, стабільність роботи і підготовки даних, зрозумілість результатів, зручності внесення змін до програмної документацію і в програми'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Супроводжуванність - це',\r\n        answer: [\r\n            'група властивостей, що визначає зусилля, необхідні для виконання, пристосованість до діагностики відмов і наслідків внесення змін, модифікації і атестації модифікується програмного забезпечення'\r\n        ]\r\n    }, {\r\n        question: 'Раціональність (ефективність) - це',\r\n        answer: [\r\n            'група властивостей, що характеризується ступенем відповідності використовуваних ресурсів середовища функціонування рівню якості (надійності) функціонування програмного забезпечення при заданих умовах застосування'\r\n        ]\r\n    }, {\r\n        question: 'Переносимість - це',\r\n        answer: [\r\n            'група властивостей програмного забезпечення, що забезпечує його пристосованість для перенесення з одного середовища функціонування в інші, зусилля для перенесення і адаптацію програмного забезпечення до нового середовища функціонування'\r\n        ]\r\n    },\r\n    {\r\n        question: 'До складових надійності програмного забезпечення не належить',\r\n        answer: [\r\n            'функціональна повнота'\r\n        ]\r\n    },\r\n    {\r\n        question: 'До складових надійності програмного забезпечення відносяться',\r\n        answer: [\r\n            'безвідмовність',\r\n            'стійкість до помилок',\r\n            'відновлюванність'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Досягнення надійності програмного забезпечення забезпечується',\r\n        answer: [\r\n            'запобіганням відмови',\r\n            'усуненням відмови',\r\n            'оцінкою можливості появи нових відмов і заходів боротьби з ними'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Метрики програмного продукту включають',\r\n        answer: [\r\n            'зовнішні метрики, що позначають властивості продукту, видимі користувачеві',\r\n            'внутрішні метрики, що позначають властивості, видимі тільки команді розробників'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Внутрішні метрики продукту включають',\r\n        answer: [\r\n            'метрики розміру',\r\n            'метрики складності програми'\r\n        ]\r\n    }, {\r\n        question: 'Зовнішні метрики продукту включають',\r\n        answer: [\r\n            'метрики надійності',\r\n            'метрики зручності застосування'\r\n        ]\r\n    }, {\r\n        question: 'Напрацювання на відмову як атрибут надійності визначає',\r\n        answer: [\r\n            'середній час між появою загроз'\r\n        ]\r\n    },\r\n    {\r\n        question: 'При підході, орієнтованому на продукт, оцінка якості проводиться після випробування програмних систем. Цей підхід базується на припущенні, що',\r\n        answer: [\r\n            'чим більше виявлено та усунуто помилок в процесі випробування продукту, тим вище його якість'\r\n        ]\r\n    }, {\r\n        question: 'Інженерія якості - це',\r\n        answer: [\r\n            'набір організаційних структур, методик, заходів, процесів і ресурсів для здійснення керування якістю'\r\n        ]\r\n    }, {\r\n        question: 'Планування якості являє собою',\r\n        answer: [\r\n            'діяльність, спрямовану на визначення цілей і вимог до якості'\r\n        ]\r\n    }, {\r\n        question: 'Програмні системи слід відносити до класу',\r\n        answer: [\r\n            'систем, що самовідновлюються'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Інтенсивність відмов - це',\r\n        answer: [\r\n            'частота появи відмов або дефектів в програмних системах при їх тестуванні або експлуатації'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Абстрагування - це',\r\n        answer: [\r\n            'виділення істотних аспектів системи і відволікання від несуттєвих'\r\n        ]\r\n    },\r\n    {\r\n        question: 'Сутність структурного підходу до розробки програмних систем - це',\r\n        answer: [\r\n            'декомпозиція (розбиття) системи на функції, які в свою чергу діляться на підфункції, на завдання і так далі'\r\n        ]\r\n    },\r\n    {\r\n        question: `Об'єктно-орієнтований підхід (ООП) - це`,\r\n        answer: [\r\n            `стратегія розробки, в рамках якої розробники системи замість операцій і функцій мислять об'єктами`\r\n        ]\r\n    },\r\n\r\n  /**\r\n   *\r\n   *\r\n   *\r\n   *\r\n   *\r\n   *\r\n   * Data Base\r\n   *\r\n   *\r\n   *\r\n   */\r\n\r\n  {\r\n    question: 'Виберіть визначення  2-ий нормальної форми',\r\n    answer: [\r\n      'відношення знаходиться в 2-йнормальной формі, якщо воно знаходиться в 1-ій нормальній формі і немає функціональних залежностей між неключових атрибутами і частини первинного ключа'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть конструкції мови PL / SQL, які не є циклами',\r\n    answer: [\r\n      'IF … THEN … END IF',\r\n      'SELECT … INTO … FROM …'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть приклади команди SELECT, в яких правильно були використані агрегатні функції',\r\n    answer: [\r\n      'Select AVG(ocenka) from Students',\r\n      'Select COUNT(DISTINCT group_number) from Student',\r\n      'Select group_number from Student group by group_number having AVG(ocenka) > 35'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть правильні визначення змінних типу запис в мові PL / SQL',\r\n    answer: [\r\n      'FOR VAR2 IN CURSOR1 LOOP … END LOOP',\r\n      'DECLARE VAR4 SGROUP%ROWTYPE',\r\n      'TYPE P IS RECORD (subject VARCHAR2 (22),sport VARCHAR2 (22)); MyPref P;'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть ключі таблиці, які можна оголосити в одній таблиці більш ніж один раз',\r\n    answer: [\r\n      'UNIQUE',\r\n      'FOREIGN KEY'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть правильні визначення ключів таблиці, вся команда Create table повинна бути правильною',\r\n    answer: [\r\n      'Create table B(a1 integer, b1 integer references A(a2),  PRIMARY KEY(a1,b1))',\r\n      'Create table D(d1 CHAR(10), d2 VARCHAR(5), PRIMARY KEY(d1,d2))'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть події, на які може реагувати тригер PL / SQL',\r\n    answer: [\r\n      'до виконання команди Insert into',\r\n      'після команди Update'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Виберіть з нижче наведених запитів той, який містить пов’язаний (корельований) запит',\r\n    answer: [\r\n      'Select * from Student a where avg_ocenka > (Select AVG(avg_ocenka) from Student b where a.group_number = b.group_number)'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Скільки разів виконується пов’язаний (корельований) підзапит для непорожній таблиці',\r\n    answer: [\r\n      'стільки разів, скільки рядків перегляне зовнішній запит'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Які з нижче перерахованих назв є підмовою мови SQL',\r\n    answer: [\r\n      'DML',\r\n      'DDL'\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT * FROM Student GROUP BY student_id ORDER BY student_id',\r\n    answer: [\r\n      'помилка між ключовими словами SELECT і FROM'\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT group_id FROM Student WHERE COUNT(student_id) > 5 GROUP BY group_id',\r\n    answer: [\r\n      'помилка після ключового слова WHERE'\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT group_id FROM Student GROUP BY group_id HAVING COUNT(student_id) > 5 ORDER BY group_id',\r\n    answer: [\r\n      'помилки в запиті немає'\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT student_id, group_id FROM Student st, SGroup gr  WHERE st.group_id = gr.group_id',\r\n    answer: [\r\n      'помилка SELECT student_id, group_id'\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT firstname, groupname FROM SGroup gr INNER JOIN Student as st ON Group.group_id = Student.group_id;',\r\n    answer: [\r\n      'ошибка INLINE JOIN'\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT student_id FROM Student WHERE ocenka = (SELECT ocenka FROM Student WHERE group_id = 101)',\r\n    answer: [\r\n      'помилка WHERE ocenka = ('\r\n    ]\r\n  },\r\n  {\r\n    question: 'SELECT student_id FROM Student WHERE ocenka IN (SELECT MAX(ocenka) FROM Student WHERE group_id = 101)',\r\n    answer: [\r\n      'помилки в запиті немає'\r\n    ]\r\n  },\r\n  {\r\n    question: 'UPDATE TABLE Student SET ocenka = 4 WHERE student_id = 7',\r\n    answer: [\r\n      'помилка UPDATE TABLE Student'\r\n    ]\r\n  },\r\n  {\r\n    question: 'CREATE TABLE Student ( student_id integer PRIMARY KEY, group_id integer REFERENCES Group (group_id), Fio varchar(100) UNIQUE KEY, ocenka float, CHECK(ocenka BETWEEN 3 AND 5))',\r\n    answer: [\r\n      'помилка Fio varchar(100) UNIQUE KEY'\r\n    ]\r\n  },\r\n\r\n /**\r\n   *\r\n   *\r\n   *\r\n   *\r\n   *\r\n   *\r\n   * Software Architecture\r\n   *\r\n   *\r\n   *\r\n   */\r\n\r\n  {\r\n    question: 'Ефективність застосування багатопоточності полягає',\r\n    answer: [\r\n      'в поділі завдань за пріоритетами',\r\n      'у виконанні тривалих завдань у фоновому режимі'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Гарна архітектура програмного забезпечення повинна',\r\n    answer: [\r\n      'розкривати структуру системи',\r\n      'реалізовувати всі варіанти використання і сценарії',\r\n      'по можливості відповідати всім вимогам різних зацікавлених сторін',\r\n      'виконувати вимоги, як по функціональності, так і за якістю'\r\n    ]\r\n  },\r\n  {\r\n    question: 'До основних принципів проектування архітектури ПЗ відносяться',\r\n    answer: [\r\n      `принцип поділу функціональності для забезпечення високої зв'язність і слабкої залежності`,\r\n      'принцип єдності відповідальності',\r\n      'принцип мінімального знання',\r\n      'мінімізація попереднього проектування'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Двійкова серіализація дозволяє',\r\n    answer: [\r\n      `перетворення стану об'єкта в форму, придатну для збереження або передачі`,\r\n      'зберігати вірність типів',\r\n      `застосовувати віддалену передачу об'єктів \"за значенням\"`\r\n    ]\r\n  },\r\n  {\r\n    question: 'Основна мета дисципліни програмної архітектури є',\r\n    answer: [\r\n      'зниження складності системи шляхом абстракції і розмежування повноважень'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Стандартна XML серіализація дозволяє',\r\n    answer: [\r\n      `перетворити стан об'єкта в форму, придатну для збереження або передачі`,\r\n      'використовувати тільки відкриті властивості і поля'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Стандартна JSON серіализація дозволяє',\r\n    answer: [\r\n      `перетворити стан об'єкта в форму, придатну для збереження або передачі`,\r\n      'використовувати тільки відкриті властивості і поля'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Вкажіть коректні правила іменування для XML Element',\r\n    answer: [\r\n      `ім'я тегу має починатися з букви або символу підкреслення`,\r\n      `ім'я тегу не може починатися з рядка «xml» в будь-якому регістрі`\r\n    ]\r\n  },\r\n  {\r\n    question: 'Вкажіть коректні правила іменування для атрибутів XML Element',\r\n    answer: [\r\n      `ім'я атрибута повинно починатися з букви або символу підкреслення`,\r\n      `ім'я атрибута не може починатися з рядка «xml» в будь-якому регістрі`\r\n    ]\r\n  },\r\n  {\r\n    question: 'Вкажіть правильний синтаксис для XML Element',\r\n    answer: [\r\n      '<Tag * [attribName = \"value\"]> body </ tag>',\r\n      '<Tag * [attribName = \"value\"] />'\r\n    ]\r\n  },\r\n  {\r\n    question: 'В COM-технології для забезпечення коректної взаємодії многопоточного клієнта і однопотокового сервера використовують', // error\r\n    answer: [\r\n      'апартменти (apartments)'\r\n    ]\r\n  },\r\n  {\r\n    question: 'В COM-технології інформація про місцезнаходження COM-сервера знаходиться',\r\n    answer: [\r\n      'в реєстрі операційної системи'\r\n    ]\r\n  },\r\n  {\r\n    question: 'В COM-технології маршалінга (marshaling) використовується для', // error\r\n    answer: [\r\n      'упаковки і розпаковування параметрів методів під час виклику методу через кордони процесу'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Якщо застосування використовує COM-сервер, реалізований у вигляді DLL то це дозволяє',\r\n    answer: [\r\n      `зменшити накладні витрати на виклик методів COM-об'єкта`\r\n    ]\r\n  },\r\n  {\r\n    question: 'Якщо застосування використовує COM-сервер, реалізований у вигляді EXE то це дозволяє',\r\n    answer: [\r\n      'збільшити надійність застосування'\r\n    ]\r\n  },\r\n  {\r\n    question: 'До поведінкових шаблонах (Behavioral design patterns) відносяться', // error\r\n    answer: [\r\n      'Спостерігач (Observer)',\r\n    ]\r\n  },\r\n  {\r\n    question: 'До породжує шаблонами (Creational design patterns) відносяться', // error\r\n    answer: [\r\n      'Відкладене ініціалізація (Lazy initialization)'\r\n    ]\r\n  },\r\n  {\r\n    question: 'До структурних шаблонах (Structural design patterns) відносяться', // error\r\n    answer: [\r\n      'Шаблон Фасад (Facade)'\r\n    ]\r\n  },\r\n  {\r\n    question: 'До шаблонами паралельного програмування (Concurrency design patterns) відносяться', // error\r\n    answer: [\r\n      'Блокування з подвійною перевіркою (Double-checked locking)'\r\n    ]\r\n  },\r\n  {\r\n    question: 'За допомогою шаблонів проектування',\r\n    answer: [\r\n      'забезпечують загальний (уніфікований) словник предметної області',\r\n      'спрощується документування архітектури ПО',\r\n      'розглядають проблему на абстрактному рівні',\r\n      'виділяють важливі частини архітектури в компактній формі'\r\n    ]\r\n  },\r\n  {\r\n    question: `Шаблони проектування, які абстрагують процес створення екземпляра класу і дозволяють зробити систему незалежною від способу створення, композиції та представлення об'єктів відносяться до`,\r\n    answer: [\r\n      'породжуючими шаблонами (Creational design patterns)'\r\n    ]\r\n  },\r\n  {\r\n    question: `Шаблони проектування, які визначають взаємодію між об'єктами, збільшуючи таким чином його гнучкість відносяться до`,\r\n    answer: [\r\n      'поведінковим шаблонами (Behavioral design patterns)'\r\n    ]\r\n  },\r\n  {\r\n    question: `Шаблони проектування, які визначають різні складні структури, які змінюють інтерфейс вже існуючих об'єктів або його реалізацію, дозволяючи полегшити розробку і оптимізувати програму відносяться до`,\r\n    answer: [\r\n      'структурним шаблонами (Structural design patterns)'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Вкажіть анти-патерн використання одного шаблону для вирішення всіх можливих і неможливих завдань',\r\n    answer: [\r\n      'Golden hammer'\r\n    ]\r\n  },\r\n  {\r\n    question: 'Вкажіть анти-патерн змішання рівня бізнес-логіки та інтерфейсу',\r\n    answer: [\r\n      'Magic pushbutton'\r\n    ]\r\n  }\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}